[server]
host: 0.0.0.0
#  The host address in which to bind the HTTP server.  Default is to bind
#  to all ipv4 interfaces.  If set to "all" the server will bind to all
#  ipv4 an ipv6 interfaces.
port: 7125
#   The port the HTTP server will listen on.  Default is 7125
klippy_uds_address: /home/echoedvoez/printer_data/comms/klippy.sock
#   The address of Unix Domain Socket used to communicate with Klippy. This
#   option accepts Jinja2 Templates, where the configured data path is
#   passed to the template context, for example:
#     klippy_uds_address: {data_path}/comms/klippy.sock
#
#   Default is /tmp/klippy_uds.

[authorization]
trusted_clients:
    192.168.0.0/16
    10.0.0.0/8
    127.0.0.0/8
    169.254.0.0/16
    172.16.0.0/12
    192.168.0.0/16
    FE80::/10
    ::1/128
    #192.168.1.0/160  #<--Trust local network machines. Only needed if [authorization] enabled.
cors_domains:
    *.lan
    *.local
    *://localhost
    *://localhost:*
    *://my.mainsail.xyz
    *://app.fluidd.xyz
    *:7136  #<--Allow PrettyGCode (port 7136) on all domains (recommended) OR...
    *.local:7136  #<--Allow PrettyGCode (port 7136) on just .*local domain. (more secure I guess)

[power Printer]
type: gpio
pin: gpio26
locked_while_printing: True
on_when_job_queued: True
restart_klipper_when_powered: True
restart_delay: 2
bound_service: klipper

[file_manager]
queue_gcode_uploads: True
#   When set to True the file manager will add uploads to the job_queue when
#   the `start_print` flag has been set.  The default if False.
enable_object_processing: True
# moonraker.conf


[spoolman]
server: localhost:7912
#   URL to the Spoolman instance. This parameter must be provided.
sync_rate: 2
#   The interval, in seconds, between sync requests with the
#   Spoolman server.  The default is 5.
# enables support for slicer uploads via partial Octoprint API impl


[octoprint_compat]

[history]
# moonraker.conf

[timelapse]
##   Following basic configuration is default to most images and don't need
##   to be changed in most scenarios. Only uncomment and change it if your
##   Image differ from standart installations. In most common scenarios 
##   a User only need [timelapse] in their configuration.
output_path: ~/timelapse/
##   Directory where the generated video will be saved
frame_path: /tmp/timelapse/
##   Directory where the temporary frames are saved
#ffmpeg_binary_path: /usr/bin/ffmpeg
##   Directory where ffmpeg is installed


[update_manager]
channel: dev
refresh_interval: 168

[update_manager mainsail]
path: /home/echoedvoez/mainsail
repo: mainsail-crew/mainsail
channel: beta
type: web

[update_manager mainsail-config]
managed_services: klipper
origin: https://github.com/mainsail-crew/mainsail-config.git
path: /home/echoedvoez/mainsail-config
primary_branch: master
type: git_repo

# Crowsnest update_manager entry
[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
managed_services: crowsnest
install_script: tools/pkglist.sh

[update_manager KlipperScreen]
type: git_repo
path: ~/KlipperScreen
origin: https://github.com/KlipperScreen/KlipperScreen.git
virtualenv: ~/.KlipperScreen-env
requirements: scripts/KlipperScreen-requirements.txt
system_dependencies: scripts/system-dependencies.json
managed_services: KlipperScreen

[update_manager led_effect]
type: git_repo
path: ~/klipper-led_effect
origin: https://github.com/julianschill/klipper-led_effect.git
is_system_service: False

[update_manager Spoolman]
type: zip
channel: stable
repo: Donkie/Spoolman
path: ~/Spoolman
virtualenv: .venv
requirements: requirements.txt
persistent_files:
  .venv
  .env
managed_services: Spoolman

# Sonar update_manager entry
[update_manager sonar]
type: git_repo
path: ~/sonar
origin: https://github.com/mainsail-crew/sonar.git
primary_branch: main
managed_services: sonar
install_script: tools/install.sh

[update_manager klipper_tmc_autotune]
type: git_repo
channel: dev
path: ~/klipper_tmc_autotune
origin: https://github.com/andrewmcgr/klipper_tmc_autotune.git
managed_services: klipper
primary_branch: main
install_script: install.sh

# moonraker.conf
[update_manager timelapse]
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git
managed_services: klipper moonraker

# Adds PrettyGCode to Moonrakers update manager
[update_manager pgcode]
type: git_repo
primary_branch: main
origin: https://github.com/Kragrathea/pgcode.git
path: ~/pgcode
is_system_service: False

[update_manager klipper_auto_speed]
type: git_repo
path: ~/klipper_auto_speed
origin: https://github.com/anonoei/klipper_auto_speed.git
primary_branch: main
install_script: install.sh
managed_services: klipper

[update_manager mcu_flasher]
type: git_repo
path: ~/moonraker-mcu-flasher
origin: https://github.com/juliapythoncpp/moonraker-mcu-flasher.git
is_system_service: False
managed_services: klipper moonraker

[update_manager relax]
type: git_repo
origin: https://github.com/interias/RELAX.git
path: ~/RELAX
managed_services: klipper

[update_manager mobileraker]
install_script: /home/echoedvoez/mobileraker_companion/scripts/install.sh
requirements: /home/echoedvoez/mobileraker_companion/scripts/mobileraker-requirements.txt
env: /home/echoedvoez/mobileraker-env/bin/python
managed_services: mobileraker
primary_branch: main
origin: https://github.com/Clon1998/mobileraker_companion.git
path: /home/echoedvoez/mobileraker_companion
type: git_repo

[update_manager klipper-backup]
type: git_repo
path: ~/klipper-backup
origin: https://github.com/Staubgeborener/klipper-backup.git
managed_services: moonraker
primary_branch: main

[include moonraker-obico-update.cfg]

## Klippain Shake&Tune automatic update management
[update_manager Klippain-ShakeTune]
type: git_repo
origin: https://github.com/Frix-x/klippain-shaketune.git
path: ~/klippain_shaketune
virtualenv: /home/echoedvoez/klippy-env
requirements: requirements.txt
system_dependencies: system-dependencies.json
primary_branch: main
managed_services: klipper
